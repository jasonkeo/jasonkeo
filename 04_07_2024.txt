
Neetcode
-big O notation
-recursion
    -
    -structure of recursion


-static arrays vs dynamic arrays
    -arrays in general have addresses that are incremented based on the size that they are
    -static arrays have fixed space
-pointers
    -point to the address not the variable??
-understand how traversing trees

-Sorting


-BST

-Linkedlist
    -objects that point to each other
    -


React and also Javascript
-useEffect
-useState
    -a way to render dynamic data
    -syntax
    - let [variable, changeVariable] = useState("intial data");
        -if changeVariable("s") then the component holding the code will rerender
    

-useContext
-fetch
-import syntax
    -import module or {function_1, function_2} from 'path';

-other notes
    -sometimes when u write a function thats going to be called it when 
-callbacks vs .then()


-map vs foreach

-async functions and promises


Typescript
-when to specify types
    -declaring variables, asking for parameters in function, objects

-sytanx of typescript

-types
    -string, boolean, number, boolean
-interfaces
- or method




System Design
-RAM, CPU and Storage
    -1 thread
-scaling horzontilally vs vertically

-data is sent in packets which sometimes contain pieces of a large item that then can be assembled together once all the packets are sent
-ports are certain doorways which can be opened to accept these packets
-network protocol is a set of rules which determines how theses the data is sent

Rules of HTTP
-HTTP => CRUD operations
    -GET, PUT, POST, DELETE
-the structure of header (meta data) and body
    -header contains infomation like where it is going
    -body contains infomation like the method and the "pay load"

-TCP vs UDP
    -TCP stands for Transmission Control Protocol
    -it is more reliable but slower
        -this is because it performs a "3 way handshake" where it will send packets back and forth confirming if packets were actually received
            -in this process it checks if theres a server, servers wants to recieve packets and sending the packet
    -example uses include FTP
    -it has has 
-public ip have 
-HTTP vs HTTPS
-websocket
    -establishes a connection then bidirectional
    -this is better than "palling" which is frequent HTTP requests
    -HTTP 2 actually has same feature
    -this can be used for chatapps as can keep communicating 

-cookies vs cache


NoSQL vs SQL
-soft deleting
-
-


SQL queries
-

Django
-ORM - a layer of abstraction over SQL, e.g Django will convert python code to SQL queries
    -orm can protect against SQL injections
-views - take a http request and return a http response
    -this can be a full web page for example or just an api response
    -class based and function based views
-models
-serialiser
    -filtering requests
    -fields certain....
-migrations


C#


TryHackMe and Cyber
-encryption algorithms and what they are used for
    -caespher cipher
    -base64
    -hmac
    -RSA

-phinising and social engineerings 
-malware
-DATA leaks
-endpoint/API vulnerabilties
    -sql injection
-ASCII and UTF-8
-cross site scripting
-proxies
-symmetric and assymetric encryption
-hashing
    -weak passwords